//登山人选问题
//攀登一座高山，假定匀速前进，从山脚登到山顶需走N天，下山也需N天。山上没有水和食品，给养要靠登山队员携带，而每个队员所携带的给养量要少于他登顶再返回
// 山脚所消耗的给养量。因此，一定要组成一个登山队，在多人支持的情况下，保证有一个登顶。
//现在的登山俱乐部有P个人待选，我们将P个人分别编号为k=1，2，3,...P,令E【k】表示编号为k的人每日消耗的给养量，M【k】表示编号为k的人最多可携带的给
// 养量。登山计划要求所有的成员同时出发，其中一些人分别在若干天后返回，最终保证出发N天后至少有一人登顶，出发2N天后所有人都返回山脚，无人滞留山上。
//编程要求：用键盘输入天数N（N<10）、俱乐部人数P之后，依次输入E【k】和M【k】，k=1，2，3...，分别输出两个登山组队计划。
//计划1，要求参加登山的人数尽可能少，在满足这一条件之下消耗的总给养量最少。
//计划2，要求消耗的总给养量最少（人数不限）。
//输出的内容是：有多少队员参加登山，消耗的总给养量，在出发时每人分别携带多少给养，每人分别在出发几天后返回。题目数据保证有解。
#include <iostream>
using namespace std;

int main() {
    std::cout << "Hello, World!" << std::endl;
    return 0;
}
